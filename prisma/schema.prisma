datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Restaurant {
  id          Int       @id @default(autoincrement())
  name        String
  postCode    String
  city        String
  address     String
  countryCode String
  vatId       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Table {
  id        Int       @id @default(autoincrement())
  name      String
  x         Int
  y         Int
  width     Int
  height    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  Orders    Order[]
}

model MenucardCategory {
  id            Int            @id @default(autoincrement())
  name          String
  // priority is used to sort the categories in the frontend and store float values to allow for easy insertion of new categories
  priority      Float          @default(-1.0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
  MenucardItems MenucardItem[]
}

model MenucardItem {
  id                 Int              @id @default(autoincrement())
  name               String
  priority           Float            @default(-1.0)
  type               String           @default("FOOD")
  menucardCategoryId Int
  price              Float
  onsiteVatId        Int
  deliveryVatId      Int
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  deletedAt          DateTime?
  MenucardCategory   MenucardCategory @relation(fields: [menucardCategoryId], references: [id])
  OrderItem          OrderItem[]
}

model Order {
  id           Int         @id @default(autoincrement())
  tableId      Int
  serviceDayId Int
  userId       Int
  closedAt     DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Table        Table       @relation(fields: [tableId], references: [id])
  User         User        @relation(fields: [userId], references: [id])
  OrderItems   OrderItem[]
}

model OrderItem {
  id             Int          @id @default(autoincrement())
  orderId        Int
  menucardItemId Int
  quantity       Int
  priceAtOrder   Float
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  Order          Order        @relation(fields: [orderId], references: [id])
  MenucardItem   MenucardItem @relation(fields: [menucardItemId], references: [id])
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  pin       String
  role      String   @default("WAITER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Orders    Order[]
}
